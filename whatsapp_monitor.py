#!/usr/bin/env python3
"""
Script de monitoramento do WhatsApp
Verifica a conex√£o do WAHA e notifica no Telegram quando h√° problemas
"""

import time
import schedule
import os
from dotenv import load_dotenv
from WhatsApp.wa_enviar import WhatsAppAPI, notify_telegram_connection_issue

load_dotenv()

def check_whatsapp_connection():
    """
    Verifica a conex√£o do WhatsApp e notifica se houver problemas
    """
    print(f"[{time.strftime('%Y-%m-%d %H:%M:%S')}] Verificando conex√£o do WhatsApp...")
    
    whatsapp = WhatsAppAPI()
    
    # Verifica se consegue conectar
    if not whatsapp.check_connection():
        print("‚ùå Problema de conex√£o detectado!")
        
        # Notifica no Telegram
        success = notify_telegram_connection_issue()
        if success:
            print("‚úÖ Notifica√ß√£o enviada para o Telegram")
        else:
            print("‚ùå Falha ao enviar notifica√ß√£o para o Telegram")
    else:
        print("‚úÖ Conex√£o do WhatsApp OK")

def main():
    """
    Fun√ß√£o principal do monitoramento
    """
    print("üîç Iniciando monitoramento do WhatsApp...")
    
    # Verifica imediatamente
    check_whatsapp_connection()
    
    # Agenda verifica√ß√£o a cada 5 minutos
    schedule.every(5).minutes.do(check_whatsapp_connection)
    
    print("üìÖ Monitoramento agendado para verificar a cada 5 minutos")
    print("‚èπÔ∏è  Pressione Ctrl+C para parar")
    
    # Loop principal
    while True:
        try:
            schedule.run_pending()
            time.sleep(30)  # Verifica a cada 30 segundos se h√° tarefas pendentes
        except KeyboardInterrupt:
            print("\nüõë Monitoramento interrompido pelo usu√°rio")
            break
        except Exception as e:
            print(f"‚ùå Erro no monitoramento: {e}")
            time.sleep(60)  # Espera 1 minuto antes de tentar novamente

if __name__ == "__main__":
    main() 