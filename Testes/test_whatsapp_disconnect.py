#!/usr/bin/env python3
"""
Script para testar a notifica√ß√£o de desconex√£o do WhatsApp
"""

import os
from dotenv import load_dotenv
from WhatsApp.wa_green_api import GreenAPI

def test_disconnect_notification():
    """Testa a notifica√ß√£o de desconex√£o"""
    load_dotenv()
    
    print("üîç Testando notifica√ß√£o de desconex√£o do WhatsApp...")
    
    # Verifica vari√°veis de ambiente
    instance_id = os.getenv("GREEN_API_INSTANCE_ID")
    api_token = os.getenv("GREEN_API_TOKEN")
    phone_number = os.getenv("WHATSAPP_PHONE_NUMBER")
    admin_chat_ids = os.getenv("ADMIN_CHAT_IDS", "").split(",") if os.getenv("ADMIN_CHAT_IDS") else []
    
    print(f"GREEN_API_INSTANCE_ID: {'‚úÖ Configurado' if instance_id else '‚ùå N√£o configurado'}")
    print(f"GREEN_API_TOKEN: {'‚úÖ Configurado' if api_token else '‚ùå N√£o configurado'}")
    print(f"WHATSAPP_PHONE_NUMBER: {'‚úÖ Configurado' if phone_number else '‚ùå N√£o configurado'}")
    print(f"ADMIN_CHAT_IDS: {'‚úÖ Configurado' if admin_chat_ids else '‚ùå N√£o configurado'}")
    
    if not all([instance_id, api_token, phone_number]):
        print("\n‚ùå Configura√ß√£o incompleta. Verifique todas as vari√°veis no .env")
        return False
    
    if not admin_chat_ids:
        print("\n‚ö†Ô∏è ADMIN_CHAT_IDS n√£o configurado. Configure os IDs dos admins no .env")
        return False
    
    # Cria inst√¢ncia da API
    api = GreenAPI(instance_id, api_token, phone_number)
    
    # Verifica status atual
    print("\nüîó Verificando status atual...")
    current_status = api.check_connection()
    print(f"Status atual: {'‚úÖ Conectado' if current_status else '‚ùå Desconectado'}")
    
    if current_status:
        print("\n‚ö†Ô∏è WhatsApp est√° conectado. Para testar a notifica√ß√£o:")
        print("1. Desconecte o WhatsApp na Green-API")
        print("2. Execute este script novamente")
        return True
    
    # Testa notifica√ß√£o de desconex√£o
    print("\nüì§ Testando notifica√ß√£o de desconex√£o...")
    api.notify_admins_disconnected(admin_chat_ids)
    
    print("‚úÖ Notifica√ß√£o de desconex√£o enviada!")
    print("Verifique se os admins receberam a mensagem no Telegram")
    
    return True

def test_connection_verification():
    """Testa a verifica√ß√£o de conex√£o com notifica√ß√£o"""
    load_dotenv()
    
    print("\nüîç Testando verifica√ß√£o de conex√£o com notifica√ß√£o...")
    
    instance_id = os.getenv("GREEN_API_INSTANCE_ID")
    api_token = os.getenv("GREEN_API_TOKEN")
    phone_number = os.getenv("WHATSAPP_PHONE_NUMBER")
    admin_chat_ids = os.getenv("ADMIN_CHAT_IDS", "").split(",") if os.getenv("ADMIN_CHAT_IDS") else []
    
    if not all([instance_id, api_token, phone_number]):
        print("‚ùå Configura√ß√£o incompleta")
        return False
    
    # Cria inst√¢ncia da API
    api = GreenAPI(instance_id, api_token, phone_number)
    
    # Testa verifica√ß√£o com notifica√ß√£o
    print("üîó Verificando conex√£o...")
    is_connected = api.verify_and_notify_connection(admin_chat_ids)
    
    if is_connected:
        print("‚úÖ WhatsApp conectado - nenhuma notifica√ß√£o enviada")
    else:
        print("‚ùå WhatsApp desconectado - notifica√ß√£o enviada aos admins")
    
    return True

if __name__ == "__main__":
    print("üöÄ Testando sistema de notifica√ß√£o de desconex√£o...")
    print("=" * 60)
    
    # Teste de notifica√ß√£o
    notification_success = test_disconnect_notification()
    
    if notification_success:
        # Teste de verifica√ß√£o
        verification_success = test_connection_verification()
        
        print("\n" + "=" * 60)
        if verification_success:
            print("üéâ Testes conclu√≠dos com sucesso!")
        else:
            print("‚ö†Ô∏è Teste de verifica√ß√£o falhou")
    else:
        print("\n‚ùå Teste de notifica√ß√£o falhou")
    
    print("\nüìù Para mais informa√ß√µes, consulte o README_WHATSAPP.md") 